swagger: "2.0"
info:
  title: Firecracker MVP API
  description: "Firecraker MVP - RESTful public-facing API.


  The API is accessible through HTTP calls on specific URLs carrying JSON modeled data. The transport medium is a Unix Domain Socket."

  version: experimental
  termsOfService: ""
  contact:
    email: "acatan@amazon.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

host: "localhost"
basePath: "/"

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /:
    get:
      summary: Return general information about an instance.
      operationId: describeInstance
      responses:
        200:
          description: The instance information.
          schema:
            $ref: '#/definitions/InstanceInfo'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /boot/source:
    get:
      summary: "Get configured boot source."
      operationId: "getGuestBootSource"
      responses:
        200:
          description: Specified boot source.
          schema:
            $ref: "#/definitions/BootSource"
        404:
          description: Boot source does not exist.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: "Creates new boot source. If boot source already exists,
                updates its state based on new input. May fail if update is not possible."
      operationId: "putGuestBootSource"
      parameters:
      - name: "body"
        in: body
        description: "Guest boot source properties"
        required: true
        schema:
          $ref: "#/definitions/BootSource"
      responses:
        201:
          description: Boot source created.
        204:
          description: Boot source updated.
        400:
          description: Boot source cannot be created due to bad input.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

  /metadata:
    get:
      summary: Return metadata about an instance.
      operationId: getMetadata
      responses:
        200:
          description: The instance metadata.
          schema:
            $ref: '#/definitions/InstanceMetadata'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

definitions:
  NodeInfo:
    description: Node information for this instance.
    properties:
      nr_huge_pages:
        type: integer
        format: int32
        description: The number of 2MiB pages of memory in this instance.
      cores:
        type: integer
        format: int32
        description: The number of CPU cores in this instance.
      cpu_features:
        type: integer
        format: int64
        description: Bitmask for the active CPU features in this instance.

  InstanceMetadata:
    description: Instance metadata or metainformation.
    properties:
      virt_id:
        type: integer
        format: int64
        description: The numeric instance-id.
      account_id:
        type: string
        description: The AWS account ID of the instance's owner
      instance_type:
        type: string
        description: The instance type - e.g. 'm3.xlarge', etc.
      image_id:
        type: integer
        format: int64
        description: The numeric image id (ami) of the instance.
      detailed_monitoring:
        type: boolean
        description: True for enabling detailed monitoring

  InstanceInfo:
    properties:
      instance_id:
        type: string
      state:
        description: |
          The current detailed state of the Firecracker instance. This value is
          read-only by the control-plane.
        type: string
        enum:
          - Initializing
          - Initialized
          - Starting
          - Running
          - Pausing
          - Paused
          - Unpausing
          - Halting
          - Halted
          - Rebooting
          - Resetting
          - Reset
          - Terminating
          - Terminated
          - Destroying
          - Destroyed
      node_info:
        $ref: '#/definitions/NodeInfo'

  BootSource:
    type: object
    description: |
      Boot source descriptor. 'source_type' will specify the boot source type and depending
      on its value: one and only one of 'local_image', 'drive_boot' or 'network_boot' should
      describe the boot resource in detail.
    properties:
      boot_source_id:
        type: string
        description: "unique identifier for this boot source"
      source_type:
        type: string
        description: "type of boot source"
        enum:
        - "LocalImage"
        - "DriveBoot"
        - "NetworkBoot"
      local_image:
        $ref: '#/definitions/LocalImage'
      drive_boot:
        $ref: '#/definitions/DriveBoot'
      network_boot:
        $ref: '#/definitions/NetworkBoot'
      boot_args:
        type: string
        description: "kernel boot arguments"
  LocalImage:
    type: object
    description: |
      Locations for local kernel image and initrd files. Empty path(s) means not used.
    properties:
      kernel_image_path:
        type: string
        description: "host level path to the kernel image used to boot the guest"
      initrd_path:
        type: string
        description: "host level path to initrd used to boot the guest"
  DriveBoot:
    type: object
    description: Drive to use as boot source.
    properties:
      drive_id:
        type: string
        description: "unique identifier specifying which drive to boot from"
  NetworkBoot:
    type: object
    description: Network to use as boot source.
    properties:
      iface_id:
        type: string
        description: "unique identifier specifying which network interface to boot from"

  InstanceStartAction:
    type: object
    properties:
      # Timestamp generated by FC - output only
      timestamp:
        type: string

  Error:
    properties:
      faultMessage:
        type: string
        description: A description of the error condition.
