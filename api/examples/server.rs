#![allow(missing_docs)]

extern crate firecracker_api;
extern crate iron;
extern crate futures;
extern crate clap;

use clap::{App, Arg};
use iron::{Iron, Chain};

// Import the module that defines the Server struct.
mod server_lib;

/// Create custom server, wire it to the autogenerated router,
/// and pass it to the web server.
fn main() {
    let matches = App::new("server")
        .arg(Arg::with_name("https")
            .long("https")
            .help("Whether to use HTTPS or not"))
        .get_matches();

    let server = server_lib::Server{};
    let router = firecracker_api::router(server);

    let chain = Chain::new(router);

    if matches.is_present("https") {
        // Using Simple HTTPS
    } else {
        // Using HTTP
        Iron::new(chain).http("localhost:8080").expect("Failed to start HTTP server");
    }
}
