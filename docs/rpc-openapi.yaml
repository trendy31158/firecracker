swagger: "2.0"
info:
  description: "Firecraker RPC API"
  version: "1.0.0"
  title: "Firecraker RPC API"
  termsOfService: ""
  contact:
    email: "acatan@amazon.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/"

tags:
- name: "firecracker"
  description: "Operations for firecracker"
  externalDocs:
    description: "compute capsule"
    url: "http://localhost"

schemes:
- "http"

paths:
  /memory:
    get:
      tags:
      - "firecracker"
      summary: Current memory info
      description: Returns current memory config
      operationId: "getMemory"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meminfo"
        500:
          $ref: "#/responses/Standard500ErrorResponse"
    put:
      tags:
      - "firecracker"
      summary: Current memory info
      description: Sets memory config
      operationId: "putMemory"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "Memory object"
        required: true
        schema:
          $ref: "#/definitions/Meminfo"
      - in: "query"
        name: "new_fd"
        required: true
        type: "boolean"
      responses:
        default:
          description: "successful operation"
  /cpu:
    get:
      tags:
      - "firecracker"
      summary: Current memory info
      description: Returns current memory config
      operationId: "getCpu"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CPU"
        500:
          $ref: "#/responses/Standard500ErrorResponse"
    put:
      tags:
      - "firecracker"
      summary: Current cpu info
      description: Sets cpu config
      operationId: "postCpu"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created cpu object"
        required: true
        schema:
          $ref: "#/definitions/CPU"
      responses:
        default:
          description: "successful operation"
  /limiters:
    post:
      tags:
      - "firecracker"
      summary: Create rate limiter
      description: Creates a new rate limiter
      operationId: "addLimiter"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Rate limiter to add"
        required: true
        schema:
          $ref: "#/definitions/Limiter"
      responses:
        default:
          description: "successful operation"
  /limiters/createWithList:
    post:
      tags:
      - "firecracker"
      summary: Create rate limiters from list
      description: Creates multiple rate limiters
      operationId: "addLimitersWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of rate limiters"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Limiter"
      responses:
        default:
          description: "successful operation"
  /limiters/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get limiter by id"
      description: ""
      operationId: "getLimiterById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the rate limiter to fetch."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Limiter"
        400:
          description: "Invalid rate limiter id supplied"
        404:
          description: "Rate limiter not found"
    put:
      tags:
      - "firecracker"
      summary: "Update rate limiter"
      description: ""
      operationId: "updateLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the rate limiter to update."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Rate limiter properties"
        required: true
        schema:
          $ref: "#/definitions/Limiter"
      responses:
        400:
          description: "Invalid rate limiter id supplied"
        404:
          description: "Rate limiter not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete rate limiter"
      description: ""
      operationId: "deleteLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the rate limiter to delete."
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid rate limiter id supplied"
  /drives:
    post:
      tags:
      - "firecracker"
      summary: Create drive
      description: "Creates a new drive. Drive FD is expected along with this call."
      operationId: "addDrive"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Drive to add"
        required: true
        schema:
          $ref: "#/definitions/Drive"
      responses:
        default:
          description: "successful operation"
  /drives/createWithList:
    post:
      tags:
      - "firecracker"
      summary: Create list of drives
      description: "Creates multiple new drives. Drives' FDs are expected along with this call."
      operationId: "addDrivesWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of drive objects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Drive"
      responses:
        default:
          description: "successful operation"
  /drives/{uuid}:
    get:
      tags:
      - "firecracker"
      summary: "Get drive by uuid"
      description: ""
      operationId: "getDriveByUUID"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "The uuid of the drive to be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Drive"
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
    put:
      tags:
      - "firecracker"
      summary: "Update drive"
      description: ""
      operationId: "updateDrive"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to update"
        required: true
        type: "string"
      - name: "fdUpdate"
        in: "query"
        description: "backing FD is also updated?"
        required: true
        type: "boolean"
      - name: "body"
        in: "body"
        description: "Drive properties"
        required: true
        schema:
          $ref: "#/definitions/Drive"
      responses:
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete drive"
      description: ""
      operationId: "deleteDrive"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid uuid supplied"
  /drives/{uuid}/addRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply rate limiter to drive"
      description: ""
      operationId: "driveAddLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to apply rate limiter to"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to apply"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
  /drives/{uuid}/removeRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove rate limiter from drive"
      description: ""
      operationId: "driveRemoveLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to remove rate limiter from"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to remove"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
  /drives/{uuid}/attach:
    put:
      tags:
      - "firecracker"
      summary: "Attach drive"
      description: ""
      operationId: "driveAttach"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to attach"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
  /drives/{uuid}/detach:
    put:
      tags:
      - "firecracker"
      summary: "Detach drive"
      description: ""
      operationId: "driveDetach"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "uuid of drive to detach"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid uuid supplied"
        404:
          description: "Drive not found"
  /networks:
    post:
      tags:
      - "firecracker"
      summary: Create network
      description: "Creates a new network. TUN/TAP FD is expected along with this call."
      operationId: "addNetwork"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Network to add"
        required: true
        schema:
          $ref: "#/definitions/Network"
      responses:
        default:
          description: "successful operation"
  /networks/createWithList:
    post:
      tags:
      - "firecracker"
      summary: Create list of networks
      description: "Creates multiple new networks. TUN/TAPs FDs are expected along with this call."
      operationId: "addNetworksWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of network objects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Network"
      responses:
        default:
          description: "successful operation"
  /networks/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get network by id"
      description: ""
      operationId: "getNetworkById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the network to be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Network"
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
    put:
      tags:
      - "firecracker"
      summary: "Update network"
      description: ""
      operationId: "updateNetwork"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to update"
        required: true
        type: "string"
      - name: "fdUpdate"
        in: "query"
        description: "backing FD is also updated?"
        required: true
        type: "boolean"
      - name: "body"
        in: "body"
        description: "Network properties"
        required: true
        schema:
          $ref: "#/definitions/Network"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete network"
      description: ""
      operationId: "deleteNetwork"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
  /networks/{id}/addRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply rate limiter to network"
      description: ""
      operationId: "networkAddLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to apply rate limiter to"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to apply"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
  /network/{id}/removeRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove rate limiter from network"
      description: ""
      operationId: "networkRemoveLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to remove rate limiter from"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to remove"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
  /networks/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect network"
      description: ""
      operationId: "networkConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to connect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
  /networks/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect network"
      description: ""
      operationId: "networkDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of network to disconnect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
  /vsocks:
    post:
      tags:
      - "firecracker"
      summary: Create vsock
      description: "Creates a new vsock. Socket FD is expected along with this call."
      operationId: "addVsock"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Vsock to add"
        required: true
        schema:
          $ref: "#/definitions/Vsock"
      responses:
        default:
          description: "successful operation"
  /vsocks/createWithList:
    post:
      tags:
      - "firecracker"
      summary: Create list of vsocks
      description: "Creates multiple new vsocks. Socket FDs are expected along with this call."
      operationId: "addVsockWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of vsock objects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Vsock"
      responses:
        default:
          description: "successful operation"
  /vsocks/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get vsock by id"
      description: ""
      operationId: "getVsockById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the vsock to be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vsock"
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
    put:
      tags:
      - "firecracker"
      summary: "Update vsock"
      description: ""
      operationId: "updateVsock"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to update"
        required: true
        type: "string"
      - name: "fdUpdate"
        in: "query"
        description: "backing FD is also updated?"
        required: true
        type: "boolean"
      - name: "body"
        in: "body"
        description: "Vsock properties"
        required: true
        schema:
          $ref: "#/definitions/Vsock"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete vsock"
      description: ""
      operationId: "deleteVsock"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
  /vsocks/{id}/addRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply rate limiter to vsock"
      description: ""
      operationId: "vsockAddLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to apply rate limiter to"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to apply"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /vsocks/{id}/removeRateLimiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove rate limiter from vsock"
      description: ""
      operationId: "vsockRemoveLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to remove rate limiter from"
        required: true
        type: "string"
      - in: "query"
        name: "LimiterID"
        description: "ID of rate limiter to remove"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /vsocks/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect vsock"
      description: ""
      operationId: "vsockConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to connect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /vsocks/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect vsock"
      description: ""
      operationId: "vsockDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of vsock to disconnect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /consoles:
    post:
      tags:
      - "firecracker"
      summary: Create console
      description: "Creates a new console. Console FDs are expected along with this call."
      operationId: "addConsole"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Console to add"
        required: true
        schema:
          $ref: "#/definitions/Console"
      responses:
        default:
          description: "successful operation"
  /consoles/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get console by id"
      description: ""
      operationId: "getConsoleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the console to be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Console"
        400:
          description: "Invalid id supplied"
        404:
          description: "console not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete console"
      description: ""
      operationId: "deleteConsole"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of console to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
  /consoles/{id}/stdout:
    put:
      tags:
      - "firecracker"
      summary: "Provide new FD or disable console STDOUT"
      description: ""
      operationId: "consolePutStdout"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of console to modify"
        required: true
        type: "string"
      - name: "active"
        in: "query"
        description: "FD is expected if active='true'"
        required: true
        type: "boolean"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Console not found"
  /consoles/{id}/stderr:
    put:
      tags:
      - "firecracker"
      summary: "Provide new FD or disable console STDERR"
      description: ""
      operationId: "consolePutStderr"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of console to modify"
        required: true
        type: "string"
      - name: "active"
        in: "query"
        description: "FD is expected if active='true'"
        required: true
        type: "boolean"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Console not found"
  /consoles/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect console"
      description: ""
      operationId: "consoleConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of console to connect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Console not found"
  /consoles/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect console"
      description: ""
      operationId: "consoleDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of console to disconnect"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Console not found"

definitions:
  Limiter:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      metric:
        type: "string"
        description: "metric used by the rate limiter"
        enum:
        - "ops/s"
        - "bandwidth"
      maxCredits:
        type: "integer"
      initialCredits:
        type: "integer"
      refillRate:
        type: "integer"
  Drive:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      activeLimitersIDs:
        type: "array"
        items:
          type: "integer"
  Network:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      mac:
        type: "string"
      activeLimitersIDs:
        type: "array"
        items:
          type: "integer"
  Vsock:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      activeLimitersIDs:
        type: "array"
        items:
          type: "integer"
  Console:
    type: "object"
    properties:
      name:
        type: "string"
      stdoutActive:
        type: "boolean"
      stderrActive:
        type: "boolean"
  Meminfo:
    type: "object"
    properties:
      size:
        type: "integer"
        format: "int64"
  CpuFeatureSet:
    type: "object"
    properties:
      id:
        type: "integer"
      features:
        type: "array"
        items:
          type: "integer"
          format: "int16"
  CPU:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
      featureSet:
        $ref: "#/definitions/CpuFeatureSet"
  Error:
    properties:
      code:
        type: string
      message:
        type: string

responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: "#/definitions/Error"
