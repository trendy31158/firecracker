swagger: "2.0"
info:
  description: "Firecraker RPC API"
  version: "1.0.0"
  title: "Firecraker RPC API"
  termsOfService: ""
  contact:
    email: "acatan@amazon.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/"

tags:
- name: "firecracker"
  description: "Operations for firecracker"
  externalDocs:
    description: "compute capsule"
    url: "http://localhost"

schemes:
- "http"

paths:
  /guest/memory:
    get:
      tags:
      - "firecracker"
      summary: "Get guest current memory info"
      description: "Returns guest current memory config"
      operationId: "getGuestMemory"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meminfo"
        500:
          $ref: "#/responses/Standard500ErrorResponse"
    put:
      tags:
      - "firecracker"
      summary: "Update guest current memory info"
      description: "Sets guest memory config"
      operationId: "putGuestMemory"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "fd-update"
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      - in: body
        name: "data"
        description: "Memory object"
        required: true
        schema:
          $ref: "#/definitions/Meminfo"
      responses:
        default:
          description: "successful operation"
  /guest/cpu:
    get:
      tags:
      - "firecracker"
      summary: "Get guest current cpu info"
      description: "Returns guest current cpu config"
      operationId: "getGuestCpu"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CPU"
        500:
          $ref: "#/responses/Standard500ErrorResponse"
    put:
      tags:
      - "firecracker"
      summary: "Update guest current cpu info"
      description: "Sets guest cpu config"
      operationId: "postCpu"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Created cpu object"
        required: true
        schema:
          $ref: "#/definitions/CPU"
      responses:
        default:
          description: "successful operation"
  /guest/io-limiters:
    post:
      tags:
      - "firecracker"
      summary: "Create guest IO rate limiter"
      description: "Creates a new guest IO rate limiter"
      operationId: "postGuestIOLimiter"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Guest IO rate limiter to add"
        required: true
        schema:
          $ref: "#/definitions/IOLimiter"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IOLimiter"
        400:
          description: "Invalid id supplied"
    get:
      tags:
      - "firecracker"
      summary: "All guest IO rate limiters"
      description: "Returns guest list of limiters."
      operationId: "getGuestIOLimiters"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/IOLimiter"
        400:
          description: "No available IO limiters on guest."
  /guest/io-limiters/create-with-list:
    post:
      tags:
      - "firecracker"
      summary: "Create guest IO rate limiters from list"
      description: "Creates guest multiple IO rate limiters"
      operationId: "postGuestIOLimitersWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "List of guest IO rate limiters"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/IOLimiter"
      responses:
        default:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/IOLimiter"
  /guest/io-limiters/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest IO rate limiter by id"
      description: ""
      operationId: "getGuestIOLimiterById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest IO rate limiter to fetch."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IOLimiter"
        400:
          description: "Invalid IO rate limiter id supplied"
        404:
          description: "IO rate limiter not found"
    put:
      tags:
      - "firecracker"
      summary: "Update guest IO rate limiter"
      description: ""
      operationId: "updateGuestIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the IO rate limiter to update."
        required: true
        type: string
      - in: body
        name: "body"
        description: "IO rate limiter properties"
        required: true
        schema:
          $ref: "#/definitions/IOLimiter"
      responses:
        400:
          description: "Invalid guest IO rate limiter id supplied"
        404:
          description: "Guest IO rate limiter not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest IO rate limiter"
      description: ""
      operationId: "deleteGuestIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest IO rate limiter to delete."
        required: true
        type: string
      responses:
        400:
          description: "Invalid IO rate limiter id."
  /guest/drives:
    post:
      tags:
      - "firecracker"
      summary: "Create guest storage drive"
      description: "Creates a new storage drive on guest. Drive FD is required as ancillary data to this message."
      operationId: "postGuestDrive"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Guest drive to add"
        required: true
        schema:
          $ref: "#/definitions/Drive"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Drive"
        400:
          description: "Invalid id supplied"
    get:
      tags:
      - "firecracker"
      summary: "All guest drives"
      description: "Returns list of guest storage drives."
      operationId: "getGuestDrives"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Drive"
        400:
          description: "No available drives."
  /guest/drives/create-with-list:
    post:
      tags:
      - "firecracker"
      summary: "Create multiple guest storage drives"
      description: "Creates multiple new drives on guest. Drives' FDs are required as ancillary data to this message."
      operationId: "postGuestDrivesWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "List of guest drive objects"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Drive"
      responses:
        default:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Drive"
  /guest/drives/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest drive by id"
      description: ""
      operationId: "getGuestDriveByID"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest drive to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Drive"
        400:
          description: "Invalid guest drive id supplied"
        404:
          description: "Drive not found"
    put:
      tags:
      - "firecracker"
      summary: "Update guest drive"
      description: ""
      operationId: "updateGuestDrive"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to update"
        required: true
        type: string
      - name: "fd-update"
        in: query
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      - name: "body"
        in: body
        description: "Guest drive properties"
        required: true
        schema:
          $ref: "#/definitions/Drive"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Drive not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest drive"
      description: ""
      operationId: "deleteGuestDrive"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to delete"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/drives/{id}/add-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply IO rate limiter to guest drive"
      description: ""
      operationId: "putGuestDriveAddIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to apply IO rate limiter to."
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of rate limiter to use."
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Drive not found"
  /guest/drives/{id}/remove-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove IO rate limiter from guest drive"
      description: ""
      operationId: "putGuestDriveRemoveIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to remove IO rate limiter from."
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of rate limiter to remove."
        required: true
        type: string
      responses:
        400:
          description: "Invalid guest drive id supplied"
        404:
          description: "Drive not found"
  /guest/drives/{id}/attach:
    put:
      tags:
      - "firecracker"
      summary: "Attach/Enable guest drive"
      description: ""
      operationId: "putGuestDriveAttach"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to attach"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Drive not found"
  /guest/drives/{id}/detach:
    put:
      tags:
      - "firecracker"
      summary: "Detach/disable guest drive"
      description: ""
      operationId: "putGuestDriveDetach"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest drive to detach"
        required: true
        type: string
      responses:
        400:
          description: "Invalid guest drive id supplied"
        404:
          description: "Drive not found"
  /guest/network-interfaces:
    post:
      tags:
      - "firecracker"
      summary: "Create guest network interface"
      description: "Creates a new network interface on guest. TUN/TAP FD is required as ancillary data to this message."
      operationId: "postGuestNetworkInterface"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Network interface to add"
        required: true
        schema:
          $ref: "#/definitions/Network"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Network"
        400:
          description: "Invalid id supplied"
    get:
      tags:
      - "firecracker"
      summary: "All guest network interfaces"
      description: "Returns list of guest network interfaces."
      operationId: "getGuestNetworkInterfaces"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Network"
        400:
          description: "No available networks."
  /guest/network-interfaces/create-with-list:
    post:
      tags:
      - "firecracker"
      summary: "Create multiple guest network interfaces"
      description: "Creates multiple new network interfaces. TUN/TAPs FDs are required as ancillary data to this message."
      operationId: "postGuestNetworkInterfacesWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "List of guest network interfaces"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Network"
      responses:
        default:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Network"
  /guest/network-interfaces/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest network interface by id"
      description: ""
      operationId: "getGuestNetworkInterfaceById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest network interface to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Network"
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
    put:
      tags:
      - "firecracker"
      summary: "Update guest network interface"
      description: ""
      operationId: "putGuestNetworkInterface"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to update"
        required: true
        type: string
      - name: "fd-update"
        in: query
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      - name: "body"
        in: body
        description: "Network interface properties"
        required: true
        schema:
          $ref: "#/definitions/Network"
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest network interface"
      description: ""
      operationId: "deleteGuestNetworkInterface"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to delete"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/network-interfaces/{id}/add-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply IO rate limiter to guest network interface"
      description: ""
      operationId: "putGuestNetworkAddIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to apply IO rate limiter to"
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of rate limiter to use."
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network interface not found"
  /network/{id}/remove-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove rate limiter from guest network interface"
      description: ""
      operationId: "putGuestNetworkRemoveIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to remove IO rate limiter from"
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of IO rate limiter to remove."
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network interface not found"
  /guest/network-interfaces/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect/enable guest network interface"
      description: ""
      operationId: "putGuestNetworkInterfaceConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to connect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network interface not found"
  /guest/network-interfaces/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect/disable guest network interface"
      description: ""
      operationId: "putGuestNetworkInterfaceDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest network interface to disconnect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Network interface not found"
  /guest/vsocks:
    post:
      tags:
      - "firecracker"
      summary: "Create vsock"
      description: "Creates a new guest vsock. Socket FD is required as ancillary data to this message."
      operationId: "postGuestVsock"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Guest vsock to add"
        required: true
        schema:
          $ref: "#/definitions/Vsock"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vsock"
        400:
          description: "Invalid guest vsock id supplied"
    get:
      tags:
      - "firecracker"
      summary: "All guest vsocks"
      description: "Returns list of guest vsocks."
      operationId: "getGuestVsocks"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Vsock"
        400:
          description: "No available vsocks."
  /guest/vsocks/create-with-list:
    post:
      tags:
      - "firecracker"
      summary: "Create multiple of guest vsocks"
      description: "Creates multiple new guest vsocks. Socket FDs are required as ancillary data to this message."
      operationId: "postGuestVsockWithListInput"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "List of guest vsock objects"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Vsock"
      responses:
        default:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Vsock"
  /guest/vsocks/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest vsock by id"
      description: ""
      operationId: "getGuestVsockById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest vsock to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vsock"
        400:
          description: "Invalid guest vsock id supplied"
        404:
          description: "Vsock not found"
    put:
      tags:
      - "firecracker"
      summary: "Update guest vsock"
      description: ""
      operationId: "putGuestVsock"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to update"
        required: true
        type: string
      - name: "fd-update"
        in: query
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      - name: "body"
        in: body
        description: "Guest vsock properties"
        required: true
        schema:
          $ref: "#/definitions/Vsock"
      responses:
        400:
          description: "Invalid guest vsock id"
        404:
          description: "Vsock not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest vsock"
      description: ""
      operationId: "deleteGuestVsock"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to delete"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/vsocks/{id}/add-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Apply IO rate limiter to guest vsock"
      description: ""
      operationId: "putGuestVsockAddIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to apply IO rate limiter to"
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of IO rate limiter to use."
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /guest/vsocks/{id}/remove-rate-io-limiter:
    put:
      tags:
      - "firecracker"
      summary: "Remove guest rate limiter from vsock"
      description: ""
      operationId: "putGuestVsockRemoveIOLimiter"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to remove IO rate limiter from"
        required: true
        type: string
      - in: query
        name: "io-limiter-id"
        description: "Unique id of IO rate limiter to remove."
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Vsock not found"
  /guest/vsocks/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect/enable guest vsock"
      description: ""
      operationId: "putGuestVsockConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to connect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid guest vsock id supplied"
        404:
          description: "Vsock not found"
  /guest/vsocks/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect/disable guest vsock"
      description: ""
      operationId: "putGuestVsockDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest vsock to disconnect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid guest vsock id supplied"
        404:
          description: "Vsock not found"
  /guest/serial-consoles:
    post:
      tags:
      - "firecracker"
      summary: "Create guest serial console"
      description: "Creates a new guest serial console. Console FDs are required as ancillary data to this message."
      operationId: "postGuestSerialConsole"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Guest serial console to add"
        required: true
        schema:
          $ref: "#/definitions/Console"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Console"
        400:
          description: "Invalid id supplied"
    get:
      tags:
      - "firecracker"
      summary: "Get all guest serial consoles"
      description: "Returns list of guest serial consoles."
      operationId: "getGuestSerialConsoles"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Console"
        400:
          description: "No available consoles."
  /guest/consoles/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest serial console by id"
      description: ""
      operationId: "getGuestConsoleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the guest serial console to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Console"
        400:
          description: "Invalid id supplied"
        404:
          description: "Guest serial console not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest serial console"
      description: ""
      operationId: "deleteGuestSerialConsole"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest serial console to delete"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/consoles/{id}/stdout:
    put:
      tags:
      - "firecracker"
      summary: "Provide new FD for guest serial console STDOUT or enable/disable it"
      description: ""
      operationId: "putGuestSerialConsoleStdout"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest serial console to modify"
        required: true
        type: string
      - name: "active"
        in: query
        description: "Specifies if stdout of serial console is active or not"
        required: true
        type: boolean
      - name: "fd-update"
        in: query
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Serial console not found"
  /guest/consoles/{id}/stderr:
    put:
      tags:
      - "firecracker"
      summary: "Provide new FD for guest serial console STDERR or enable/disable it"
      description: ""
      operationId: "putGuestSerialConsoleStderr"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest serial console to modify"
        required: true
        type: string
      - name: "active"
        in: query
        description: "Specifies if stderr of serial console is active or not"
        required: true
        type: boolean
      - name: "fd-update"
        in: query
        description: "True if FD is also updated (new FD sent as ancillary data to this message)."
        required: true
        type: boolean
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Serial console not found"
  /guest/consoles/{id}/connect:
    put:
      tags:
      - "firecracker"
      summary: "Connect/enable guest serial console"
      description: ""
      operationId: "putGuestSerialConsoleConnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest serial console to connect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Serial console not found"
  /guest/consoles/{id}/disconnect:
    put:
      tags:
      - "firecracker"
      summary: "Disconnect/disable guest serial console"
      description: ""
      operationId: "putGuestSerialConsoleDisconnect"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest serial console to disconnect"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Serial console not found"
  /guest/files:
    post:
      tags:
      - "firecracker"
      summary: "Provide guest access to a host file"
      description: "Provides guest with access to a host file. FD is expected as ancillary data with this call."
      operationId: "postGuestAccessToHostFile"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: "Host file to be accessed from guest"
        required: true
        schema:
          $ref: "#/definitions/File"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/File"
    get:
      tags:
      - "firecracker"
      summary: "Get list of files accessible by guest"
      description: "Returns list of files accessible by guest."
      operationId: "getGuestAccessToHostFiles"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/File"
        400:
          description: "No available files accessible by guest."
  /guest/files/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get file accessible by guest by id"
      description: ""
      operationId: "getGuestFileAccessibleByGuestById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the file to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/File"
        400:
          description: "Invalid id supplied"
        404:
          description: "file not found"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest access to host file"
      description: ""
      operationId: "deleteAccessToHostFile"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of file to delete access to guest"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/boot/local-images:
    post:
      tags:
      - "firecracker"
      summary: "Add guest boot images"
      description: "Provides guest with IDs of files to be used as the kernel image and inird."
      operationId: "postGuestLocalBootImages"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/LocalBootRes"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LocalBootRes"
    get:
      tags:
      - "firecracker"
      summary: "Get all guest boot local images"
      description: "Returns list of guest boot local images."
      operationId: "getGuestAllLocalBootImages"
      produces:
      - "application/json"
      parameters:
       - $ref: "#/parameters/pageSize"
       - $ref: "#/parameters/pageNumber"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/LocalBootRes"
        400:
          description: "No available guest boot local images."
  /guest/boot/local-images/{id}:
    get:
      tags:
      - "firecracker"
      summary: "Get guest local boot image by id"
      description: ""
      operationId: "getGuestLocalBootImageById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "The id of the local image pair to be fetched."
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LocalBootRes"
        400:
          description: "Invalid id supplied"
    delete:
      tags:
      - "firecracker"
      summary: "Delete boot guest local images pair"
      description: ""
      operationId: "deleteGuestLocalBootImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: path
        description: "id of guest local image pair to delete"
        required: true
        type: string
      responses:
        400:
          description: "Invalid id supplied"
  /guest/boot/source:
    put:
      tags:
      - "firecracker"
      summary: "Set guest boot source"
      description: "Provides/sets the guest boot source."
      operationId: "putGuestBootSource"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/BootSource"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BootSource"
    get:
      tags:
      - "firecracker"
      summary: "Get guest boot source"
      description: ""
      operationId: "getGuestBootSource"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BootSource"
        400:
          description: "No available boot source"
    delete:
      tags:
      - "firecracker"
      summary: "Delete guest boot source"
      description: ""
      operationId: "deleteGuestBootSource"
      produces:
      - "application/json"
      responses:
        400:
          description: "Not found"
  /firecracker/start-guest:
    put:
      tags:
      - "firecracker"
      summary: "Starts the guest VM"
      description: "Starts the guest VM."
      operationId: "putGuestStart"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "delay"
        description: "number of seconds this operation is delayed"
        type: integer
        minimum: 0
      responses:
        200:
          description: "successful operation"
  /firecracker/stop-guest:
    put:
      tags:
      - "firecracker"
      summary: "Stops the guest VM"
      description: "Stops the guest VM."
      operationId: "putGuestStop"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "delay"
        description: "number of seconds this operation is delayed"
        type: integer
        minimum: 0
      - in: query
        name: "force"
        description: "true if force kill/shutdown is wanted."
        type: boolean
      responses:
        200:
          description: "successful operation"
  /firecracker/reboot:
    put:
      tags:
      - "firecracker"
      summary: "Reboots the guest VM"
      description: "Reboots the guest VM."
      operationId: "putGuestReboot"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "delay"
        description: "number of seconds this operation is delayed"
        type: integer
        minimum: 0
      - in: query
        name: "force"
        description: "True if force reboot/powercycle is wanted."
        type: boolean
      responses:
        200:
          description: "successful operation"
  /firecracker/suspend-to-ram:
    put:
      tags:
      - "firecracker"
      summary: "Suspends the guest VM to host RAM"
      description: "Suspends the guest VM saving its state in host RAM."
      operationId: "putGuestSuspendToRam"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
  /firecracker/suspend-to-disk:
    put:
      tags:
      - "firecracker"
      summary: "Suspends the guest VM to host disk"
      description: "Suspends the guest VM saving its state in a host disk."
      operationId: "putGuestSuspendToDisk"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
  /firecracker/update:
    put:
      tags:
      - "firecracker"
      summary: "Live updates the firecracker instance"
      description: "Live updates the firecracker process completely transparent to the guest VM."
      operationId: "putGuestLiveUpdate"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "Guest live update data"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/LiveUpdateData"
      responses:
        200:
          description: "successful operation"

definitions:
  IOLimiter:
    type: object
    properties:
      id:
        type: string
      metric:
        type: string
        description: "metric used by the rate limiter"
        enum:
        - "ops/s"
        - "bandwidth"
      maxCredits:
        type: integer
      initialCredits:
        type: integer
      refillRate:
        type: integer
  Drive:
    type: object
    properties:
      id:
        type: string
      activeIOLimitersIDs:
        type: array
        items:
          type: string
  Network:
    type: object
    properties:
      id:
        type: string
      mac:
        type: string
      activeIOLimitersIDs:
        type: array
        items:
          type: string
  Vsock:
    type: object
    properties:
      id:
        type: string
      activeIOLimitersIDs:
        type: array
        items:
          type: string
  Console:
    type: object
    properties:
      id:
        type: string
      stdoutActive:
        type: boolean
      stderrActive:
        type: boolean
  Meminfo:
    type: object
    properties:
      size:
        type: integer
        format: "int64"
        minimum: 0
  CPU:
    type: object
    properties:
      core_count:
        type: integer
        minimum: 1
      features:
        type: array
        items:
          type: integer
          minimum: 0
  File:
    type: object
    properties:
      id:
        type: string
      path:
        type: string
  LocalBootRes:
    type: object
    properties:
      id:
        type: string
      kernelImageFileID:
        type: integer
        minimum: 0
        description: "unique id of File obj representing the kernel image"
      initrdFileID:
        type: integer
        minimum: 0
        description: "unique id of File obj representing the initrd"
  BootSource:
    type: object
    properties:
      id:
        type: string
      sourceType:
        type: string
        description: "type of boot source"
        enum:
        - "local-images"
        - "Drive"
        - "Network"
      sourceID:
        type: string
        description: "unique identifier for the boot resource"
      bootArgs:
        type: string
        description: "kernel boot arguments"
  LiveUpdateData:
    type: object
    properties:
      TBD:
        type: string
  Error:
    properties:
      code:
        type: string
      message:
        type: string

parameters:
  pageSize:
    in: query
    name: "pageSize"
    description: "Number of items returned"
    type: integer
    minimum: 0
  pageNumber:
    in: query
    name: "pageNumber"
    description: "Page number"
    type: integer
    minimum: 0

responses:
  Standard500ErrorResponse:
    description: "An unexpected error occured."
    schema:
      $ref: "#/definitions/Error"
